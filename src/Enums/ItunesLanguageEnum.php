<?php

namespace Kiwilan\Rss\Enums;

enum ItunesLanguageEnum: string
{
    use ItunesEnumTrait;

    case aaAa = 'Afar';
    case abAb = 'Abkhazian';
    case afAf = 'Afrikaans';
    case amAm = 'Amharic';
    case arAr = 'Arabic';
    case arAe = 'Arabic (U.A.E.)';
    case arBh = 'Arabic (Bahrain)';
    case arDz = 'Arabic (Algeria)';
    case arEg = 'Arabic (Egypt)';
    case arIq = 'Arabic (Iraq)';
    case arJo = 'Arabic (Jordan)';
    case arKw = 'Arabic (Kuwait)';
    case arLb = 'Arabic (Lebanon)';
    case arLy = 'Arabic (libya)';
    case arMa = 'Arabic (Morocco)';
    case arOm = 'Arabic (Oman)';
    case arQa = 'Arabic (Qatar)';
    case arSa = 'Arabic (Saudi Arabia)';
    case arSy = 'Arabic (Syria)';
    case arTn = 'Arabic (Tunisia)';
    case arYe = 'Arabic (Yemen)';
    case asAs = 'Assamese';
    case ayAy = 'Aymara';
    case azAz = 'Azeri';
    case baBa = 'Bashkir';
    case beBe = 'Belarusian';
    case bgBg = 'Bulgarian';
    case bhBh = 'Bihari';
    case biBi = 'Bislama';
    case bnBn = 'Bengali';
    case boBo = 'Tibetan';
    case brBr = 'Breton';
    case caCa = 'Catalan';
    case coCo = 'Corsican';
    case csCs = 'Czech';
    case cyCy = 'Welsh';
    case daDa = 'Danish';
    case deDe = 'German';
    case deAt = 'German (Austria)';
    case deCh = 'German (Switzerland)';
    case deLi = 'German (Liechtenstein)';
    case deLu = 'German (Luxembourg)';
    case divDiv = 'Divehi';
    case dzDz = 'Bhutani';
    case elEl = 'Greek';
    case enEn = 'English';
    case enAu = 'English (Australia)';
    case enBz = 'English (Belize)';
    case enCa = 'English (Canada)';
    case enGb = 'English (United Kingdom)';
    case enIe = 'English (Ireland)';
    case enJm = 'English (Jamaica)';
    case enNz = 'English (New Zealand)';
    case enPh = 'English (Philippines)';
    case enTt = 'English (Trinidad)';
    case enUs = 'English (United States)';
    case enZa = 'English (South Africa)';
    case enZw = 'English (Zimbabwe)';
    case eoEo = 'Esperanto';
    case esAr = 'Spanish (Argentina)';
    case esBo = 'Spanish (Bolivia)';
    case esCl = 'Spanish (Chile)';
    case esCo = 'Spanish (Colombia)';
    case esCr = 'Spanish (Costa Rica)';
    case esDo = 'Spanish (Dominican Republic)';
    case esEc = 'Spanish (Ecuador)';
    case esEs = 'Spanish (EspaÃ±a)';
    case esGt = 'Spanish (Guatemala)';
    case esHn = 'Spanish (Honduras)';
    case esMx = 'Spanish (Mexico)';
    case esNi = 'Spanish (Nicaragua)';
    case esPa = 'Spanish (Panama)';
    case esPe = 'Spanish (Peru)';
    case esPr = 'Spanish (Puerto Rico)';
    case esPy = 'Spanish (Paraguay)';
    case esSv = 'Spanish (El Salvador)';
    case esUs = 'Spanish (United States)';
    case esUy = 'Spanish (Uruguay)';
    case esVe = 'Spanish (Venezuela)';
    case etEt = 'Estonian';
    case euEu = 'Basque';
    case faFa = 'Farsi';
    case fiFi = 'Finnish';
    case fjFj = 'Fiji';
    case foFo = 'Faeroese';
    case frFr = 'French';
    case frBe = 'French (Belgium)';
    case frCa = 'French (Canada)';
    case frCh = 'French (Switzerland)';
    case frLu = 'French (Luxembourg)';
    case frMc = 'French (Monaco)';
    case fyFy = 'Frisian';
    case gaGa = 'Irish';
    case gdGd = 'Gaelic';
    case glGl = 'Galician';
    case gnGn = 'Guarani';
    case guGu = 'Gujarati';
    case haHa = 'Hausa';
    case heHe = 'Hebrew';
    case hiHi = 'Hindi';
    case hrHr = 'Croatian';
    case huHu = 'Hungarian';
    case hyHy = 'Armenian';
    case iaIa = 'Interlingua';
    case idId = 'Indonesian';
    case ieIe = 'Interlingue';
    case ikIk = 'Inupiak';
    case inIn = 'Indonesian';
    case isIs = 'Icelandic';
    case itIt = 'Italian';
    case itCh = 'Italian (Switzerland)';
    case iwIw = 'Hebrew';
    case jaJa = 'Japanese';
    case jiJi = 'Yiddish';
    case jwJw = 'Javanese';
    case kaKa = 'Georgian';
    case kkKk = 'Kazakh';
    case klKl = 'Greenlandic';
    case kmKm = 'Cambodian';
    case knKn = 'Kannada';
    case koKo = 'Korean';
    case koKok = 'Konkani';
    case ksKs = 'Kashmiri';
    case kuKu = 'Kurdish';
    case kyKy = 'Kirghiz';
    case kzKz = 'Kyrgyz';
    case laLa = 'Latin';
    case lnLn = 'Lingala';
    case loLo = 'Laothian';
    case lsLs = 'Slovenian';
    case ltLt = 'Lithuanian';
    case lvLv = 'Latvian';
    case mgMg = 'Malagasy';
    case miMi = 'Maori';
    case mkMk = 'FYRO Macedonian';
    case mlMl = 'Malayalam';
    case mnMn = 'Mongolian';
    case moMo = 'Moldavian';
    case mrMr = 'Marathi';
    case msMs = 'Malay';
    case mtMt = 'Maltese';
    case myMy = 'Burmese';
    case naNa = 'Nauru';
    case nbNo = 'Norwegian (Bokmal)';
    case neNe = 'Nepali (India)';
    case nlNl = 'Dutch';
    case nlBe = 'Dutch (Belgium)';
    case nnNo = 'Norwegian';
    case noNo = 'Norwegian (Bokmal)';
    case ocOc = 'Occitan';
    case omOm = '(Afan)/Oromoor/Oriya';
    case orOr = 'Oriya';
    case paPa = 'Punjabi';
    case plPl = 'Polish';
    case psPs = 'Pashto/Pushto';
    case ptPt = 'Portuguese';
    case ptBr = 'Portuguese (Brazil)';
    case quQu = 'Quechua';
    case rmRm = 'Rhaeto-Romanic';
    case rnRn = 'Kirundi';
    case roRo = 'Romanian';
    case roMd = 'Romanian (Moldova)';
    case ruRu = 'Russian';
    case ruMd = 'Russian (Moldova)';
    case rwRw = 'Kinyarwanda';
    case saSa = 'Sanskrit';
    case sbSb = 'Sorbian';
    case sdSd = 'Sindhi';
    case sgSg = 'Sangro';
    case shSh = 'Serbo-Croatian';
    case siSi = 'Singhalese';
    case skSk = 'Slovak';
    case slSl = 'Slovenian';
    case smSm = 'Samoan';
    case snSn = 'Shona';
    case soSo = 'Somali';
    case sqSq = 'Albanian';
    case srSr = 'Serbian';
    case ssSs = 'Siswati';
    case stSt = 'Sesotho';
    case suSu = 'Sundanese';
    case svSv = 'Swedish';
    case svFi = 'Swedish (Finland)';
    case swSw = 'Swahili';
    case sxSx = 'Sutu';
    case syrSyr = 'Syriac';
    case taTa = 'Tamil';
    case teTe = 'Telugu';
    case tgTg = 'Tajik';
    case thTh = 'Thai';
    case tiTi = 'Tigrinya';
    case tkTk = 'Turkmen';
    case tlTl = 'Tagalog';
    case tnTn = 'Tswana';
    case toTo = 'Tonga';
    case trTr = 'Turkish';
    case tsTs = 'Tsonga';
    case ttTt = 'Tatar';
    case twTw = 'Twi';
    case ukUk = 'Ukrainian';
    case urUr = 'Urdu';
    case usUs = 'English';
    case uzUz = 'Uzbek';
    case viVi = 'Vietnamese';
    case voVo = 'Volapuk';
    case woWo = 'Wolof';
    case xhXh = 'Xhosa';
    case yiYi = 'Yiddish';
    case yoYo = 'Yoruba';
    case zhZh = 'Chinese';
    case zhCn = 'Chinese (China)';
    case zhHk = 'Chinese (Hong Kong SAR)';
    case zhMo = 'Chinese (Macau SAR)';
    case zhSg = 'Chinese (Singapore)';
    case zhTw = 'Chinese (Taiwan)';
    case zuZu = 'Zulu';

    public function country(): string
    {
        return $this->value;
    }

    public function code(): string
    {
        return explode('-', $this->name)[0];
    }

    public function codeWithVariation(bool $lower = false): string
    {
        $values = explode('-', $this->value);
        $base = $values[0];
        $region = strtoupper($values[1]);

        $code = "{$base}-{$region}";

        return $lower ? strtolower($code) : $code;
    }
}
